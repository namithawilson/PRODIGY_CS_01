def caesar_cipher_encrypt(text, shift):
    """
    Encrypts the input text using the Caesar Cipher algorithm.
    
    Parameters:
    text (str): The input text to be encrypted.
    shift (int): The shift value for the Caesar Cipher.
    
    Returns:
    str: The encrypted text.
    """
    encrypted_text = ""
    for char in text:
        if char.isalpha():
            shift_base = 65 if char.isupper() else 97
            encrypted_text += chr((ord(char) - shift_base + shift) % 26 + shift_base)
        else:
            encrypted_text += char
    return encrypted_text

def caesar_cipher_decrypt(text, shift):
    """
    Decrypts the input text using the Caesar Cipher algorithm.
    
    Parameters:
    text (str): The input text to be decrypted.
    shift (int): The shift value for the Caesar Cipher.
    
    Returns:
    str: The decrypted text.
    """
    return caesar_cipher_encrypt(text, -shift)

def main():
    while True:
        choice = input("Do you want to (e)ncrypt, (d)ecrypt, or (q)uit? ").lower()
        if choice == 'q':
            break
        elif choice in ['e', 'd']:
            text = input("Enter the message: ")
            try:
                shift = int(input("Enter the shift value: "))
            except ValueError:
                print("Shift value must be an integer.")
                continue
            if choice == 'e':
                result = caesar_cipher_encrypt(text, shift)
                print(f"Encrypted message: {result}")
            elif choice == 'd':
                result = caesar_cipher_decrypt(text, shift)
                print(f"Decrypted message: {result}")
        else:
            print("Invalid choice. Please enter 'e' to encrypt, 'd' to decrypt, or 'q' to quit.")

if __name__ == "__main__":
    main()

